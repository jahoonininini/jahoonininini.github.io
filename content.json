{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/06/22/hello-world/"},{"title":"temp","text":"welcome to [temp]! Quick StartCreate a new post1$ &quot;upload image&quot; 1. 스위스 사진 1 스위스 사진 2","link":"/2021/06/22/temp/"},{"title":"how_to_github, git","text":"AI 수업에서 처음배운 git 사용 방법과 github 와의 연동 그리고 기타 명령어에 대해서 정리한다. gitgit 설치https://git-scm.com/downloads 에서 git 을 먼저 설치한다. githubgithub 에서 새로운 저장소를 만들어 준다. gitgit Bash 를 실행해준다. 12$ git init$ git clone + 저장소 경로 계정 로그인12$ git config --global user.name &quot;name&quot;$ git config --global user.email &quot;email&quot; git 을 통해 github 에 커밋123git add .git commit -m &quot;커밋 메시지&quot;git push","link":"/2021/06/22/how_to_git/"},{"title":"How to makes hexo blog","text":"개요 간단하게 Hexo 블로그를 만들어 본다. 필수 파일 설치 1단계: nodejs.org 다운로드 1$ node -v 2단계: git-scm.com 다운로드1$ git --version 3단계: hexo 설치 hexo는 npm을 통해서 설치가 가능하다.1$ npm install -g hexo-cli 블로그 만들기12345$ hexo init myblog$ cd myblog$ npm install$ npm install hexo-server --save$ npm install hexo-deployer-git --save 깃허브에 배포하기123$ hexo generate$ hexo server # localhost:4000 에서 접속을 확인$ hexo deploy","link":"/2021/06/22/how_to_mk_hexo_blog/"},{"title":"temp1","text":"개요 본 수업은 – 수업 1 수업 1은 …. 11+1 데이터 수집 데이터 수집은…. 12date = 1import date 2","link":"/2021/06/22/temp1/"},{"title":"how to google colab file to myblog","text":"google colabgoogle colab 으로 코드를 작성한다.작성한 코드를 ipynb 확장자로 저장한다. anacondaanaconda 에서 JupyterLab lunch 한다. JupyterLabipynb 확장자 파일을 실행한 후 md 확장자로 저장한다. VsCodeVsCode 에 md 확장자 파일은 올려 블로그에 push 한다.","link":"/2021/06/22/google_colab_to_myblog/"},{"title":"제어문, 조건문, 반복문","text":"제어문, 조건문, 반복문 실습123456789101112131415coffee = 10while True: money = int(input(&quot;돈을 넣어 주세요 : &quot;)) if money == 300: print(&quot;커피를 줍니다.&quot;) coffee = coffee - 1 elif money &gt; 300: print(&quot;거스름 돈 %d 를 주고 커피를 줍니다.&quot; % (money - 300)) coffee = coffee - 1 else: print(&quot;돈을 다시 돌려주고 커피를 주지 않습니다.&quot;) print(&quot;남은 커피의 양은 %d 개 입니다.&quot; % coffee) if coffee == 0: print(&quot;커피가 다 떨어졌습니다. 판매를 중지 합니다&quot;) break","link":"/2021/06/23/BaseGrammer_2/"},{"title":"파이썬 기본 문법 1","text":"문법 종류자료형 / 숫자형 / 문자형 / 불형 / 리스트형 / 딕셔너리 / 튜플 / 집합형 tip ctrl + / 로 한번에 주석처리 가능 \\n - 줄을 바꿀 때 \\t - 탭 간격을 줄때 ' - 문자열 내에 ‘ ‘ 표시 \\r - 줄바꿈 / 커서를 가장 앞으로 이동 len() 공백까지 포함한 문자열의 길이를 구하는 함수 인덱싱 할때는 [] 를 사용한다. 0 이 첫번째 문자열을 의미한다. % - 대입 d - 정수 s - 문자열의 변수명 print(“오늘은 온도가 %d도입니다.” % 20) print(“오늘의 수업은 %s 기초 입니다.” % “파이썬”) print(“오늘은 {0}도이며 수업은 {1}입니다.”format(20, “python”)) append = 추가, sort = 정렬, reverse = 반전, pop - 리스트의 마지막 str 삭제 count - 자료형의 str 갯수 출력 튜플 - 튜플은 리스트와 달리 자료형이 다른 것들도 담을 수 있다. 1st = (1, 2, &quot;a&quot;, &quot;b&quot;) 튜플에서는 일반적이 방식에서는 한 번 들어간 값을 변경, 수정이 힘들다. 딕셔너리 {key1:Value1, key2:Value2, key3:Value3} 123456a = {1: &quot;hi&quot;}b = {&quot;a&quot;: [1,2,3]}a[2] = &quot;how are you&quot;print(a)del a[2]print(a) 교집합 - &amp;, 합집합 - |,or(중복 허용 안함), 차집합 - - set 을 통해 집합을 만들 수 있다. 1s1 = set([1,2,3,1,4])","link":"/2021/06/23/BaseGrammer/"},{"title":"웹 크롤링, 웹 스크래핑","text":"라이브러리 설치12pip install beautifulsouppip install lxml import1234from os import nameimport requestsimport refrom bs4 import BeautifulSoup 네이버 웹툰12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576url = &quot;https://comic.naver.com/webtoon/weekday.nhn&quot;res = requests.get(url)res.raise_for_status()soup = BeautifulSoup(res.text, &quot;lxml&quot;)print(soup.title)print(soup.title.get_text())print(soup.a[&quot;href&quot;])print(soup.a.aatrs)print(soup.find(&quot;a&quot;, attra={&quot;class&quot;:&quot;Nbtn_upload&quot;}))print(soup.find(attra={&quot;class&quot;:&quot;Nbtn_upload&quot;}))print(soup.find(&quot;li&quot;, attrs={&quot;class&quot;: &quot;rank01&quot;}))rank1 = soup.find(&quot;li&quot;, attrs={&quot;class&quot;: &quot;rank01&quot;})print(rank1.a)print(rank1.a.get_text())print(rank1.next_sibling)print(rank1.next_sibling.next_sibling)# 호랑이 형님 - 각 화 만화제목 + 링크 가져오기url = &quot;https://comic.naver.com/webtoon/list.nhn?titleId=650305&quot;res = requests.get(url)res.raise_for_status()soup = BeautifulSoup(res.text, &quot;lxml&quot;)cartoons = soup.find_all(&quot;td&quot;, attrs={&quot;class&quot;:&quot;title&quot;})title = cartoons[0].a.get_text()link = cartoons[0].a[&quot;href&quot;]print(title, link)for cartoon in cartoons: title = cartoon.a.get_text() link = &quot;https://comic.naver.com&quot; + cartoon.a[&quot;href&quot;] print(title, link) total_rates = 0cartoons = soup.find_all(&quot;div&quot;, attrs={&quot;class&quot;:&quot;rating_type&quot;})for cartoon in cartoons: rate = cartoon.find(&quot;strong&quot;).get_text() print(rate) total_rates += round(float(rate), 2)print(&quot;전체 점수 : &quot;, round(total_rates), 2)print(&quot;평균 점수 : &quot;, round(total_rates / len(cartoons), 2))import requestsfrom bs4 import BeautifulSoupres = requests.get( &quot;https://search.daum.net/search?w=tot&amp;q=2020%EB%85%84%EC%98%81%ED%99%94%EC%88%9C%EC%9C%84&amp;DA=MOR&amp;rtmaxcoll=MOR&quot;)res.raise_for_status()soup = BeautifulSoup(res.text, &quot;lxml&quot;)images = soup.find_all(&quot;img&quot;, attrs={&quot;class&quot;: &quot;thumb_img&quot;})# 첫 번째 실행 후 for문 작성 시 idx, enumerate 없이(두 번째 실행 이후)# 마지막 실습for idx, image in enumerate(images): # print(image[&quot;src&quot;]) # 한 번 실행 후 주석 처리 image_url = image[&quot;src&quot;] if image_url.startswith(&quot;//&quot;): image_url = &quot;https:&quot; + image_url print(image_url) # 두 번째 실행 image_res = requests.get(image_url) image_res.raise_for_status() with open(&quot;movie{0}.jpg&quot;.format(idx+1), &quot;wb&quot;) as f: f.write(image_res.content) # 세 번째 실행 if idx &gt;= 4: # 상위 5개 이미지까지만 다운로드 break","link":"/2021/06/23/beso4/"},{"title":"기본 사칙연산, 슬라이싱","text":"12345# 이두환 평균 점수# 국어 80, 영어 100, 수학 75duhwan = [80, 100, 75]average = (duhwan[0] + duhwan[1] + duhwan[2]) / len(duhwan)print(average) 12345678# 17이 짝수? 홀수?a = 17if (a % 2 == 0): print(&quot;짝수&quot;)else: print(&quot;홀수&quot;)``` 홍길동 876504-1234567생년월일을 추출하여 결과값으로# 홍길동님의 생일은hong = ‘8765041234567’print(hong[:2],”년”,hong[2:4],”월”,hong[4:6],”일”) if(int(hong[6]) % 2 == 1): print(“남자”)else: print(“여자”)```","link":"/2021/06/23/BaseGrammer_Practice/"},{"title":"class quiz","text":"퀴즈 주어진 코드를 활용하여 부동산 프로그램을 작성하시오.(출력 예제) 총 3 곳의 매물이 있습니다. 동구 아파트 매매 5억 2020년 달성군 오피스텔 전세 3억 2021년 북구 빌라 월세 500/30 2019 Codeclass House: # 매물을 초기화 def __init__(self, location, house_type, deal_type, price, complection_year): self.location = location self.house_type = house_type self.deal_type = deal_type self.price = price self.complection_year = complection_year # 매물 정보 표시 def show_detail(self): print(self.location, self.house_type, self.deal_type, self.price, self.complection_year) a = House(&quot;동구&quot;, &quot;아파트&quot;, &quot;매매&quot;, &quot;5억&quot;, &quot;2020년&quot;) a.show_detail() b = House(&quot;달성군&quot;, &quot;오피스텔&quot;, &quot;전세&quot;, &quot;3억&quot;, &quot;2021년&quot;) b.show_detail() c = House(&quot;북구&quot;, &quot;빌라&quot;, &quot;월세&quot;, &quot;500/30&quot;, &quot;2019&quot;) c.show_detail() houses = [] house1 = House(&quot;동구&quot;, &quot;아파트&quot;, &quot;매매&quot;, &quot;5억&quot;, &quot;2020년&quot;) house2 = House(&quot;달성군&quot;, &quot;오피스텔&quot;, &quot;전세&quot;, &quot;3억&quot;, &quot;2021년&quot;) house3 = House(&quot;북구&quot;, &quot;빌라&quot;, &quot;월세&quot;, &quot;500/30&quot;, &quot;2019&quot;) houses.append(house1) houses.append(house2) houses.append(house3) print(&quot;총 {0} 곳의 매물이 있습니다.&quot;.format(len(houses))) for house in houses: house.show_detail()","link":"/2021/06/23/class-quiz/"},{"title":"selenium","text":"selenium 3.141.0다음 로그인 (Webdriver를 이용)12345678910111213141516171819from selenium import webdriverbrowser = webdriver.Chrome()browser.maximize_window()url = &quot;https://www.daum.net/&quot;browser.get(url)browser.find_element_by_class_name(&quot;link_login&quot;).click()id = browser.find_element_by_id(&quot;id&quot;)id.click()id.send_keys(&quot;identify&quot;)pw = browser.find_element_by_id(&quot;inputPwd&quot;)pw.click()pw.send_keys(&quot;1234&quot;)browser.find_element_by_class_name(&quot;btn_comm&quot;).click()","link":"/2021/06/23/daum_login/"},{"title":"exception","text":"동네에 맛있는 치킨집이 있다. 대기 손님을 위해 자동 주문 시스템을 제작하였다. 시스템 코드를 확인하고 적절하게 예외처리 구문을 넣어보자. 조건 1 1 보다 적거나 숫자가 아닌 입력값이 들어올 때는 ValueError 로 처리 메시지 “잘못된 값을 입력하였습니다.” 조건 2 총 치킨량이 10마리로 한정 치킨 소진 시 사용자 정의 에러[SoldOutError]를 발생시키고 프로그램 종료 메시지 “재고가 소진되어 더 이상 주문을 받지 않습니다.” 코드1234567891011121314151617181920212223242526class SoldOutError(Exception): passchicken = 10 # 남은 치킨 수waiting = 1 # 매장 안에는 만석, 대기번호는 1번부터 시작while(True): try: print(&quot;[남은 치킨 : {0}]&quot;.format(chicken)) order = int(input(&quot;치킨 몇 마리 주문하시겠습니까?&quot;)) if order &gt; chicken: # 남은 치킨보다 주문량이 많을 때 print(&quot;재료가 부족합니다.&quot;) elif order &lt;= 0: raise ValueError else: print(&quot;[대기번호 {0}] {1} 마리 주문이 완료되었습니다.&quot;.format(waiting, order)) waiting += 1 # 대기번호 증가 chicken -= order # 주문 수 만큼 남은 치킨 감소 if chicken == 0: raise SoldOutError except ValueError: print(&quot;잘못된 값을 입력하였습니다.&quot;) except SoldOutError: # 사용자 정의 예외처리 print(&quot;재고가 소진되어 더 이상 주문을 받지 않습니다.&quot;) break","link":"/2021/06/23/exception/"},{"title":"구글 영화 정보 가져오기","text":"구글 무비 정보 가져오기1234567891011121314import requestsfrom bs4 import BeautifulSoupurl = &quot;https://play.google.com/store/movies/top&quot;res = requests.get(url)res.raise_for_status()soup = BeautifulSoup(res.text, &quot;lxml&quot;)movies = soup.find_all(&quot;div&quot;, attrs={&quot;class&quot;:&quot;WsMG1c nnK0zc&quot;})print(len(movies))with open(&quot;movie.html&quot;, &quot;w&quot;, encoding=&quot;utf8&quot;) as f: # f.write(res.text) f.write(soup.prettify()) # html 문서를 조금 예쁘게 출력","link":"/2021/06/23/google-movie/"},{"title":"","text":"일반 유닛class Unit(): def init(self, name, hp, damage): self.name = name self.hp = hp self.damage = damage print(“{0} 유닛이 생성되었습니다.”.format(self.name)) print(“체력 {0}, 공격 {1}”.format(self.hp, self.damage)) marine = Unit(“마린”, 100) 상속공격 유닛class AttackUnit: def init(self, name, hp, damage): self.name = name self.hp = hp self.damage = damage def attack(self, location): print(&quot;{0} : {1} 방향으로 적군을 공격합니다. [공격력 {2}]&quot;.format(self.name, self.hp)) def damaged(self, damage): print(&quot;{0} : {1} 데미지를 입었습니다.&quot;.format(self.name, self.damage)) self.hp -= damage print(&quot;{0} : 현재 체력은 {1} 입니다.&quot;.format(self.name, self.hp)) if self.hp &lt;= 0: print(&quot;{0} : 파괴되었습니다.&quot;.format(self.name)) 공중 유닛class Flyable: def init(self, flying_speed): self.flying_speed = flying_speed def fly(self, name, location): print(&quot;{0} : {1} 방향으로 날아갑니다. [속도 {2}]&quot;.format(name, location, self.flying_speed)","link":"/2021/06/23/inheritance/"},{"title":"pandas","text":"Pandas1import pandas as pd pandas 자료구조 DataFrame(2차원배열) / Series(1차원배열) Series12345s1 = pd.Series([3, 6, 5, 4, 7])print(s1)print(s1.values)print(s1.index)print(s1.dtypes) 1234567s2 = pd.Series([3, 6, 5, 4, 7], index=[&quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;])print(s2)print(s2[&quot;p&quot;])print(s2[0])print(s2.p)print(s2[:2])print(s2.reindex([&quot;a&quot;, &quot;r&quot;, &quot;s&quot;, &quot;u&quot;, &quot;t&quot;])) 12345s3 = pd.Series({&quot;math&quot;:95, &quot;lang&quot;:90, &quot;code&quot;:95})print(s3)s3.name = &quot;Scores&quot;s3.index.name = &quot;Subject&quot;print(s3) DataFrame123456789101112x = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]])print(x)print(x.values)data = {&quot;subject&quot;: [&quot;math&quot;, &quot;comp&quot;, &quot;phys&quot;, &quot;music&quot;], &quot;score&quot;: [90, 80, 90, 100], &quot;students&quot;: [94, 85, 96, 90]}print(pd.DataFrame(data))y = pd.DataFrame(data)print(y.dtypes)print(len(y))print(y.shape)print(y.shape[0])print(y.shape[1])","link":"/2021/06/23/data_ana/"},{"title":"Module","text":"Module (모듈)1234567891011121314import theater_moduletheater_module.price(3)theater_module.price_mornig(4)theater_module.price_soldier(5)import theater_module as mv # 모듈 이름 변경mv.price(3)mv.price_mornig(4)from theater_module import *price(3)price_mornig(4)price_soldier(5) 12from theater_module import price_soldier as priceprice(5) package(패키지)123import travel.thailandtrip_to = travel.thailand.ThailandPackage()trip_to.detail() 123from travel import vietnamtrip_to = vietnam.VietnamPackage()trip_to.detail() 1from travel import * 모듈 위치1234import inspectimport randomprint(inspect.getfile(random))print(inspect.getabsfile(vietnam)) 내장 함수 input - 사용자 입력을 받는 함수123language = input(&quot;어떤 언어를 좋아하나요?&quot;)print(&quot;{0}은 아주 좋은 언어입니다.&quot;.format(language))print(dir()) 12345678910import pickleprint(dir())print(dir(pickle))print(dir(random))lst = [1, 2, 3, 4, 5]print(dir(lst))name = &quot;hooni&quot;print(dir(name))","link":"/2021/06/23/module_package/"},{"title":"lotto","text":"12345678910111213141516171819202122232425262728import requestsurl = &quot;http://www.dhlottery.co.kr/common.do?method=getLottoNumber&amp;drwNo=+&quot;res = requests.get(url)print(res.json())# {&quot;totSellamnt&quot;:95640447000,&quot;returnValue&quot;:&quot;success&quot;,&quot;drwNoDate&quot;:&quot;2021-06-05&quot;,&quot;firstWinamnt&quot;:2411303513,&quot;drwtNo6&quot;:37,&quot;drwtNo4&quot;:29,&quot;firstPrzwnerCo&quot;:10, &quot;drwtNo5&quot;:34,&quot;bnusNo&quot;:36,&quot;firstAccumamnt&quot;:24113035130,&quot;drwNo&quot;:966,&quot;drwtNo2&quot;:21,&quot;drwtNo3&quot;:25,&quot;drwtNo1&quot;:1}def inputRoundNumber(): roundNumber = input(&quot;당첨번호 확인할 회차를 입력해주세요 : &quot;) return roundNumberdef getJsonFromUrl(url): return requests.get(url)def existLottoData(json, roundNumber): if(json[&quot;returnValue&quot;] == &quot;success&quot;): print(json) return True else: print(&quot;존재하지 않는 회차 번호입니다.({0})&quot;.format(roundNumber)) return False def writeJsonToFile(file, jsonData): fout = open(file, &quot;w&quot;) fout.write(str(jsonData)) fout.close() 실제 함수들을 활용1234567891011roundNumber = - 1while int(roundNumber) != 0: lottoURL = &quot;http://www.dhlottery.co.kr/common.do?method=getLottoNumber&amp;drwNo=+&quot; roundNumber = inputRoundNumber() url = lottoURL + roundNumber res = getJsonFromUrl(url) print(res.json()) exist = existLottoData(res.json(), roundNumber) if(exist): writeJsonToFile(&quot;output.txt&quot;, res.json())","link":"/2021/06/23/lotto/"},{"title":"네이버 air","text":"네이버 Air 자동 표 예매 과정12345678910111213141516171819202122232425262728293031323334353637from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECbrowser = webdriver.Chrome()browser.maximize_window() # 창 최대화url = &quot;https://flight.naver.com/flights/&quot;browser.get(url) # URL 로 이동하기 위한 명령어# 가는날 선택(일정 선택)browser.find_element_by_link_text(&quot;가는날 선택&quot;).click()# 실제 요일 선택# 이번 달 5일 7일 선택browser.find_elements_by_link_text(&quot;5&quot;)[0].click()browser.find_elements_by_link_text(&quot;7&quot;)[0].click()# 목적지 설정 및 항공권 검색 버튼 클릭# browser.find_element_by_xpath(&quot;//*[@id='recommendationList']/ul/li[1]/div/span&quot;).click()browser.find_element_by_xpath(&quot;//*[@id='recommendationList']/ul/li[1]&quot;).click()browser.find_element_by_link_text(&quot;항공권 검색&quot;).click()# 검색 결과 출력# elem = browser.find_element_by_xpath(&quot;//*[@id='recommendationList']/ul/li[1]/div/span&quot;)# print(elem.text)# 검색에 따른 예외 처리try: elem = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.XPATH, &quot;//*[@id='content']/div[2]/div/div[4]/ul/li[1]&quot;))) # 성공했을 때 동작 수행 print(elem.text) # 첫 번째 결과 출력finally: browser.quit() # 브라우저 종료","link":"/2021/06/23/naver-air/"},{"title":"네이버 IT 뉴스 크롤링","text":"네이버 IT 뉴스 크롤링1234567891011121314151617181920212223242526import requestsfrom bs4 import BeautifulSoupprint(&quot;[IT관련 뉴스]&quot;)url = &quot;https://news.naver.com/main/main.nhn?mode=LSD&amp;mid=shm&amp;sid1=105&quot;headers = { &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36&quot;}res = requests.get(url, headers=headers)res.raise_for_status()soup = BeautifulSoup(res.text, &quot;lxml&quot;)news_list = soup.find(&quot;div&quot;, attrs={&quot;class&quot;: &quot;cluster_body&quot;}).find_all(&quot;li&quot;, limit=3)for index, news in enumerate(news_list): a_idx = 0 img = news.find(&quot;img&quot;) if img: a_idx = 1 # a 태그가 있으면 1번째 a 태그의 정보를 가져옴 title = news.find_all(&quot;a&quot;)[a_idx].get_text().strip() link = news.find_all(&quot;a&quot;)[a_idx][&quot;href&quot;] print(&quot;{0}.&quot; &quot;{1}&quot;.format(index+1, title)) print(&quot; ( 링크 : {0} )&quot;.format(link))print()","link":"/2021/06/23/naver_IT/"},{"title":"NumPy","text":"Numpy Numpy 가 나온 이유는 두개의 리스트를 가지고 계산을 하기 위해서 Numpy 는 일종의 행렬이다. Numpy 는 수치를 계산해준다. np.array() 이 함수를 통해 리스트를 배열로 바꿔준다. Reshape 모양을 바꿔준다. np.reshape 에서 -1 의 의미는 숫자를 자동으로 바꿔준다. NumPy 설치1$ conda install numpy 또는 1$ pip install numpy NumPy를 가져오는 방법NumPy에 액세스하려면 해당 함수가 다음과 같은 파이썬 코드에서 가져옵니다. 1$ import numpy as np 예제 코드 읽기12345678910111213141516171819202122232425262728293031$ import numpy as np$ a = np.arange(15).reshape(3, 5)$ print(a)array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14]])$ a.shape(3, 5)$ a.ndim2$ a.dtype.name'int64'$ a.itemsize8$ a.size15$ type(a)&lt;class 'numpy.ndarray'&gt;$ b = np.array([6, 7, 8])$ print(b)array([6, 7, 8])$ print(type(b))&lt;class 'numpy.ndarray'&gt; 배열 생성1234567891011$ import numpy as np$ a = np.array([2, 3, 4])$ print(a)array([2, 3, 4])$ print(a.dtype)dtype('int64')$ b = np.array([1.2, 3.5, 5.1])$ print(b.dtype)dtype('float64') 2차원 배열에서 3차원 배열로 변환 기능1234$ b = np.array([(1.5, 2, 3), (4, 5, 6)])$ print(b)array([[1.5, 2. , 3. ], [4. , 5. , 6. ]]) 기본 배열을 만드는 방법NumPy 배열을 만들려면 함수를 사용할 수 있다. np.array() 12import numpy as npa = np.array([1, 2, 3]) 1234567891011121314151617181920212223$ np.zeros(2)array([0., 0.])$ np.ones(2)array([1., 1.])$ np.empty(2)array([ 3.14, 42. ])$ np.arange(4)array([0, 1, 2, 3])# 첫 번째 번호, 마지막 번호, 단계 크기$ np.arange(2, 9, 2)array([2, 4, 6, 8])# 지정된 간격이 있는 선형 배열$ np.linspace(0, 10, num=5)arrya([0. , 2.5, 5. , 7.5, 10. ])$ x = np.ones(2, dtype=np.int64)$ print(x)array([1, 1]) 요소 추가, 제거 및 정렬 요소 정렬 - np.sort()123456789101112131415$ arr = np.array([2, 1, 5, 3, 7, 4, 6, 8])$ np.sort(arr)array([1, 2, 3, 4, 5, 6, 7, 8])# np.concatenate()$ np.concatenate((a, b))array([1, 2, 3, 4, 5, 6, 7, 8])$ x = np.array([[1, 2], [3, 4]])$ y = np.array([[5, 6]])$ np.concatenate((x, y), axis=0)array([[1, 2], [3, 4], [5, 6]]) 배열의 모양과 크기 ndarray.ndim - 축 또는 치수 수 ndarray.size - 배열의 총 요소 수 ndarray.shape - 배열의 각 치수에 저장된 요소 수를 나타내는 정수 튜플12345678&gt;&gt;&gt; array_example = np.array([[[0, 1, 2, 3],... [4, 5, 6, 7]],...... [[0, 1, 2, 3],... [4, 5, 6, 7]],...... [[0 ,1 ,2, 3],... [4, 5, 6, 7]]]) 12345678$ array_example.ndim3$ array_example.size24$ array_example.shape(3, 2, 4) 배열 바꾸기 arr.reshape()123456789101112$ a = np.arange(6)$ print(a)[0 1 2 3 4 5]$ b = a.reshape(3, 2)$ print(b)[[0 1] [2 3] [4 5]]$ numpy.reshape(a, newshape=(1, 6), order='C')array([[0, 1, 2, 3, 4, 5]]) newshape 은 원하는 모양의 배열로 만들어 준다. order:C C와 같은 인덱스 순서를 사용하여 요소를 읽고 쓰는 것을 의미 1D 배열을 2D 배열로 변환 np.newaxis배열의 치수가 한 차원씩 증가한다.1D -&gt; 2D, 2D -&gt; 3D np.expand_dims```$ a = np.array([1, 2, 3, 4, 5, 6])$ print(a.shape)(6,) $ b = np.expand_dims(a, axis=1)$ b.shape(6, 1) $ c = np.expand_dims(a, axis=0)$ c.shape(1, 6)","link":"/2021/06/23/numpy1/"},{"title":"","text":"네이버 로그인 (Webdriver를 이용)from selenium import webdriver browser = webdriver.Chrome()browser.maximize_window() url = “https://naver.com&quot;browser.get(url) browser.find_element_by_xpath(“//*[@id=’account’]/a”).click() id = browser.find_element_by_id(“id”)id.click()id.send_keys(“ghkdwognsdc”) pw = browser.find_element_by_id(“pw”)pw.click()pw.send_keys(“1234”) browser.find_element_by_xpath(“//*[@id=’log.login’]”).click()","link":"/2021/06/23/naver_login/"},{"title":"","text":"프로젝트 : 웹 스크래핑을 통해 나만의 비서를 만들어보자.[조 건]1. 네이버에서 오늘 대구의 날씨를 가져온다.2. 네이버에서 헤드라인 뉴스 3건을 가져온다.3. IT 뉴스 3건을 가져온다4. 오늘의 영어 회화 지문을 가져온다.(해커스 어학원)[출력 예시]코딩은 같은 내용이라도 처음에는 반복해서 적어본다.그러면 언젠간 머리가 아닌 손으로.여러 가지 예제를 직접 해보는 것이 중요하다.파이썬 기초 : w3school, python.org, 위키독스(점프투파이썬)import requestsfrom bs4 import BeautifulSoupimport re def create_soup(): headers = { “User-Agent”: “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36”} res = requests.get(url, headers=headers) res.raise_for_status() soup = BeautifulSoup(res.text, “lxml”) return soup def scrape_weather(): print(“[오늘의 날씨]”) url = “https://search.naver.com/search.naver?where=nexearch&amp;sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=%EB%8C%80%EA%B5%AC+%EB%82%A0%EC%94%A8&quot; res = requests.get(url) res.raise_for_status() soup = BeautifulSoup(res.text, “lxml”) # 맑음, 어제보다 OO도 높아요 cast = soup.find(“p”, attrs={“class”: “cast_txt”}).get_text() # 현재 OO도 (최저 OO도 / 최고 OO도) curr_temp = soup.find( “p”, attrs={“class”: “info_temperature”}).get_text().replace(“도씨”, “”) min_temp = soup.find(“span”, attrs={“class”: “min”}).get_text() # 최저 온도 max_temp = soup.find(“span”, attrs={“class”: “max”}).get_text() # 최고 온도 # 오전 강수확률 OO% / 오후 강수확률 OO% morning_rain_rate = soup.find( “span”, attrs={“class”: “point_time morning”}).get_text().strip() afternoon_rain_rate = soup.find( “span”, attrs={“class”: “point_time afternoon”}).get_text().strip() # 미세먼지 ( ) 좋음 # 초미세먼지 ( ) 보통 dust = soup.find(“dl”, attrs={“class”: “indicator”}) pm = dust.find(“dd”, attrs={“class”: “lv2”}).get_text() print(cast) print(&quot;현재 {0} (최저 {1} / 최고 {2})&quot;.format(curr_temp, min_temp, max_temp)) print(&quot;오전 {0} / 오후 {1}&quot;.format(morning_rain_rate, afternoon_rain_rate)) print() print(&quot;미세먼지 {0}&quot;.format(pm)) print() [헤드라인 뉴스]1. 뉴스 내용……( 링크 : https://…….)def scrape_headline_news():print(“[헤드라인 뉴스]”)url = “https://news.naver.com&quot;headers = {“User-Agent”: “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36”}res = requests.get(url, headers=headers)res.raise_for_status()soup = BeautifulSoup(res.text, “lxml”)# create_soup()news_list = soup.find(“ul”, attrs={“class”: “hdline_article_list”}).find_all(“li”, limit=3)for index, news in enumerate(news_list):title = news.find(“a”).get_text().strip()link = url + news.find(“a”)[“href”]print(“{0}.” “{1}”.format(index+1, title))print(“ ( 링크 : {0} )”.format(link))print()[IT관련 뉴스]1. IT 뉴스……(링크 : https://……)def scrape_it_news(): print(“[IT관련 뉴스]”) url = “https://news.naver.com/main/list.nhn?mode=LS2D&amp;mid=shm&amp;sid1=105&amp;sid2=230&quot; headers = { “User-Agent”: “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36”} res = requests.get(url, headers=headers) res.raise_for_status() soup = BeautifulSoup(res.text, “lxml”) news_list = soup.find( &quot;ul&quot;, attrs={&quot;class&quot;: &quot;type06_headline&quot;}).find_all(&quot;li&quot;, limit=3) for index, news in enumerate(news_list): a_idx = 0 img = news.find(&quot;img&quot;) if img: a_idx = 1 # a 태그가 있으면 1번째 a 태그의 정보를 가져옴 title = news.find_all(&quot;a&quot;)[a_idx].get_text().strip() link = news.find_all(&quot;a&quot;)[a_idx][&quot;href&quot;] print(&quot;{0}.&quot; &quot;{1}&quot;.format(index+1, title)) print(&quot; ( 링크 : {0} )&quot;.format(link)) print() [오늘의 영어 회화](영어 지문)kim : How are you?hoon : Fine!(한글 지문)kim : 어떠니?hoon : 좋아.def scrape_english():print(“[오늘의 영어 회화]”)url = “https://www.hackers.co.kr/?c=s_eng/eng_contents/I_others_english&amp;keywd=haceng_submain_lnb_eng_I_others_english&amp;logger_kw=haceng_submain_lnb_eng_I_others_english&quot;res = requests.get(url)res.raise_for_status()soup = BeautifulSoup(res.text, “lxml”)print(“(영어 지문)”)sentences = soup.find_all(“div”, attrs={“id”: re.compile(“^conv_kor_t”)})for sentence in sentences[len(sentences)//2:]:print(sentence.get_text().strip())print()print(“(한글 지문)”)for sentence in sentences[:len(sentences)//2]:print(sentence.get_text().strip())print()if name == “main“:scrape_weather() # 오늘 날씨 정보 가져오기scrape_headline_news() # 헤드라인 뉴스 가져오기scrape_it_news()scrape_english()","link":"/2021/06/23/project/"},{"title":"","text":"pip install seleniumfrom selenium.webdriver.common.keys import Keysfrom selenium import webdriver browser = webdriver.Chrome(“./chromedriver.exe”)browser.get(“http://naver.com&quot;) elem = browser.find_element_by_class_name(“link_login”)elem.click()browser.backbrowser.forward()elem = browser.find_element_by_id(“query”)elemfrom selenium.webdriver.common.keys import Keyselem.send_keys(“영화순위”)elem.send_keys(“파이썬”)elem.send_keys(Keys.ENTER)daum.net 으로 바꿔서elem = browser.find_element_by_tag_name(“a”)for e in elem:e.get_attribute(“href”)browser.get(“http://daum.net&quot;)browser.close()browser.quit()","link":"/2021/06/23/selenium1/"},{"title":"","text":"클래스 / 함수 / 파일 입출력 / 예외처리 / 모듈 관련class Unit: # 일반 유닛 클래스 생성 def init(self, name, hp, damage): self.name = name self.hp = hp self.damage = damage # 초기화 print(“{0} 유닛이 생성되었습니다.”.format(self.name)) print(“체력 {0}, 공격 {1}”.format(self.hp, self.damage)) marine1 = Unit(“마린”, “40”, “5”)marine2 = Unit(“마린”, “40”, “5”)marine3 = Unit(“마린”, “40”, “5”) 레이스 : 공중 유닛, 비행기, 클로킹wraith1 = Unit(“레이스”, 80, 10)print(“유닛 이름 : {0}, 공격력 : {1}”.format(wraith1.name, wraith1.damage)) 마인드 컨트롤wraith2 = Unit(“빼앗은 레이스”, 80, 10)wraith2.clocking = Trueif wraith2.clocking == True: print(“{0} 유닛은 현재 클로킹 상태입니다.”.format(wraith2.name)) 공격 유닛 클래스class AttackUnit: def init(self, name, hp, damage): self.name = name self.hp = hp self.damage = damage def attack(self, location): print(&quot;{0} : {1} 방향으로 적군을 공격합니다. [공격력 {2}&quot;.format( self.name, location, self.damage)) def damaged(self, damage): print(&quot;{0} : {1} 데미지를 입었습니다.&quot;.format(self.name, damage)) self.hp -= damage print(&quot;{0} : 현재 체력은 {1}입니다.&quot;.format(self.name, self.hp)) if self.hp &lt;= 0: print(&quot;{0} : 파괴되었습니다.&quot;.format(self.name)) 파이어뱃 : 공격 유닛, 화염방사기firebat1 = AttackUnit(“파이어뱃”, 50, 15)firebat1.attack(“5시”) 공격 2번 받았다고 가정firebat1.damaged(25)firebat1.damaged(25) 공중 유닛 클래스드랍쉽 : 수송기 역할class Flyable: def init(self, flying_speed): self.flying_speed = flying_speed def fly(self, name, location): print(&quot;{0} : {1} 방향으로 날아갑니다. [속도 {2}]&quot;.format( name, location, self.flying_speed)) dropship1 = Flyable(100) 공중 공격 유닛 클래스 / 상속(단일 상속 / 다중 상속)class FlyableAttackUnit(AttackUnit, Flyable): def init(self, name, hp, damage, flying_speed): AttackUnit.init(self, name, hp, damage) Flyable.init(self, flying_speed) def move(self, location): print(&quot;[공중 공격 유닛 이동]&quot;) self.fly(self.name, location) 발키리 : 공중 공격 유닛, 한 번에 14발의 미사일 발사valkyrie1 = FlyableAttackUnit(“발키리”, 200, 6, 5)valkyrie1.fly(valkyrie1.name, “3시”)","link":"/2021/06/23/starcraft_class/"},{"title":"","text":"클래스 / 함수 / 파일 입출력 / 예외처리 / 모듈 관련class Unit: # 일반 유닛 클래스 생성 def init(self, name, hp, damage): self.name = name self.hp = hp self.damage = damage # 초기화 print(“{0} 유닛이 생성되었습니다.”.format(self.name)) print(“체력 {0}, 공격 {1}”.format(self.hp, self.damage)) marine1 = Unit(“마린”, “40”, “5”)marine2 = Unit(“마린”, “40”, “5”)marine3 = Unit(“마린”, “40”, “5”)레이스 : 공중 유닛, 비행기, 클로킹wraith1 = Unit(“레이스”, 80, 10)print(“유닛 이름 : {0}, 공격력 : {1}”.format(wraith1.name, wraith1.damage)) 마인드 컨트롤wraith2 = Unit(“빼앗은 레이스”, 80, 10)wraith2.clocking = Trueif wraith2.clocking == True: print(“{0} 유닛은 현재 클로킹 상태입니다.”.format(wraith2.name)) 공격 유닛 클래스class AttackUnit: def init(self, name, hp, damage): self.name = name self.hp = hp self.damage = damage def attack(self, location): print(&quot;{0} : {1} 방향으로 적군을 공격합니다. [공격력 {2}]&quot;.format(self.name, location, self.damage)) def damaged(self, damage): print(&quot;{0} : {1} 데미지를 입었습니다.&quot;.format(self.name, damage)) self.hp -= damage print(&quot;{0} : 현재 체력은 {1}입니다.&quot;.format(self.name, self.hp)) if self.hp &lt;= 0: print(&quot;{0} : 파괴되었습니다.&quot;.format(self.name)) 파이어뱃 : 공격 유닛, 화염방사기firebat1 = AttackUnit(“파이어뱃”, 50, 15)firebat1.attack(“5시”) 공격 2번 받았다고 가정firebat1.damaged(25)firebat1.damaged(25)공중 유닛 클래스드랍쉽 : 수송기 역할class Flyable: def init(self, flying_speed): self.flying_speed = flying_speed def fly(self, name, location): print(&quot;{0} : {1} 방향으로 날아갑니다. [속도 {2}]&quot;.format(name, location, self.flying_speed)) dropship1 = Flyable(“드랍쉽”, 100)dropship1.fly(“3시”)공중 공격 유닛 클래스 / 상속(단일 상속 / 다중 상속)class FlyableAttackUnit(AttackUnit, Flyable): def init(self, name, hp, damage, flying_speed): AttackUnit.init(self, name, hp, damage) Flyable.init(self, flying_speed) def move(self, location): print(&quot;[공중 공격 유닛 이동]&quot;) self.fly(self.name, location) 발키리 : 공중 공격 유닛, 한 번에 14발의 미사일 발사valkyrie1 = FlyableAttackUnit(“발키리”, 200, 6, 5)valkyrie1.fly(valkyrie1.name, “3시”)","link":"/2021/06/23/starcraft_class2/"},{"title":"","text":"극장 요금 기능이 있는 모듈일반 가격def price(people): print(“{0}명 가격은 {1}원 입니다.”.format(people, people * 10000)) 조조 할인 가격def price_mornig(people): print(“{0}명 가격은 {1}원 입니다.”.format(people, people * 6000)) 군인 할인 가격def price_soldier(people): print(“{0}명 가격은 {1}원 입니다.”.format(people, people * 4000))","link":"/2021/06/23/theater_module/"},{"title":"","text":"import pandas as pd data = pd.read_csv(“기상청_관광코스별 관광지 상세날씨 조회 지점 정보_20200110.csv”) print(data)selectdata = data[[“1”, “2”, “3”]] print(selectdata)selectdata.to_csv(“./test.csv”)","link":"/2021/06/23/tour/"},{"title":"","text":"from random import * 일반 유닛class Unit: def init(self, name, hp, speed): self.name = name self.hp = hp self.speed = speed print(“{0} 유닛이 생성되었습니다.”.format(name)) # 출력문 추가 def move(self, location): print(&quot;{0} : {1} 방향으로 이동합니다. [속도 {2}]&quot;.format(self.name, location, self.speed)) def damaged(self, damage): print(&quot;{0} : {1} 데미지를 입었습니다.&quot;.format(self.name, damage)) self.hp -= damage print(&quot;{0} : 현재 체력은 {1} 입니다.&quot;.format(self.name, self.hp)) if self.hp &lt;= 0: print(&quot;{0} : 파괴되었습니다.&quot;.format(self.name)) 공격 유닛class AttackUnit(Unit): def init(self, name, hp, speed, damage): Unit.init(self, name, hp, speed) self.damage = damage def attack(self, location): print(&quot;{0} : {1} 방향으로 적군을 공격합니다. [공격력 {2}]&quot;.format(self.name, location, self.damage)) 마린class Marine(AttackUnit): def init(self): AttackUnit.init(self, “마린”, 40, 1, 5) # 이름 체력 이동속도 공격력 # 스팀팩 def stimpack(self): if self.hp &gt; 10: self.hp -= 10 print(&quot;{0} : 스팀팩을 사용합니다. (HP 10 감소)&quot;.format(self.name)) else: print(&quot;{0} : 체력이 부족하여 스팀팩을 사용하지 못했습니다.&quot;.format(self.name)) 탱크class Tank(AttackUnit): # 시즈모드 siege_developed = False # 시즈모드 개발여부 def __init__(self): AttackUnit.__init__(self, &quot;탱크&quot;, 150, 1, 35) # 이름 체력 이동속도 공격력 self.siege_mode = False # 시즈모드 (해제 상태) # 시즈모드 def set_siege_mode(self): if Tank.siege_developed == False: return if self.siege_mode == False: print(&quot;{0} : 시즈모드로 전환합니다.&quot;.format(self.name)) self.damage *= 2 self.siege_mode = True else: print(&quot;{0} : 시즈모드를 해제합니다.&quot;.format(self.name)) self.damage /= 2 self.siege_mode = False 날 수 있는 기능을 가진 클래스class Flyable: def init(self, flying_speed): self.flying_speed = flying_speed def fly(self, name, location): print(&quot;{0} : {1} 방향으로 날아갑니다. [속도 {2}]&quot;.format(name, location, self.flying_speed)) 공중 공격 유닛class FlyableAttackUnit(AttackUnit, Flyable): def init(self, name, hp, damage, flying_speed): AttackUnit.init(self, name, hp, 0, damage) Flyable.init(self, flying_speed) def move(self, location): self.fly(self.name, location) 레이스class Wraith(FlyableAttackUnit): def init(self): FlyableAttackUnit.init(self, “레이스”, 80, 20, 5) self.cloaked = False # 클로킹 모드 def cloaking(self): if self.cloaked == True: print(&quot;{0} : 클로킹 모드 해케합니다.&quot;.format(self.name)) self.cloaked = False else: print(&quot;{0} : 클로킹 모드 설정합니다.&quot;.format(self.name)) self.cloaked = True def game_start(): print(“[알림] 새로운 게임을 시작합니다.”) def game_over(): print(“player : gg”) print(“[player] 님이 게임에서 퇴장했습니다.”) game_start() 마린 3명 생성m1 = Marine()m2 = Marine()m3 = Marine() 탱크 2대 생성t1 = Tank()t2 = Tank() 레이스 1대 생성w1 = Wraith() 유닛 관리 - 리스트 생성attack_units = []attack_units.append(m1)attack_units.append(m2)attack_units.append(m3)attack_units.append(t1)attack_units.append(t2)attack_units.append(w1) print(attack_units) 진군 이동for unit in attack_units: unit.move(“1시”) 탱크 시즈모드 개발Tank.siege_developed = Trueprint(“[알림] 탱크 시즈 모드 개발이 완료되었습니다.”) 공격 모드 준비for unit in attack_units: if isinstance(unit, Marine): unit.stimpack() elif isinstance(unit, Tank): unit.set_siege_mode() elif isinstance(unit, Wraith): unit.cloaking() 전군 공격for unit in attack_units: unit.attack(“1시”) 전군 피해for unit in attack_units: unit.damaged(randint(5, 20)) # 공격은 랜덤으로 5~20 으로 game_over()","link":"/2021/06/23/starcraft_class3/"},{"title":"","text":"from re import Aimport requestsfrom bs4 import BeautifulSoup print(“[오늘의 베스트 웹툰]”)url = “https://comic.naver.com/genre/bestChallenge.nhn&quot;headers = {“User-Agent”: “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36”}res = requests.get(url, headers=headers)res.raise_for_status()soup = BeautifulSoup(res.text, “lxml”) today_webtoons= soup.find(“ul”, attrs={“class”: “mainTodayList”}) a = 0 while today_webtoons: title = today_webtoons.find_all(“h4”)[a].get_text().strip() rate = today_webtoons.find_all(“strong”)[a].get_text() print(“{0}”.format(title)) print(“평점 : {0}”.format(rate)) a += 1 if a == 3: break","link":"/2021/06/23/webtoon_best/"}],"tags":[{"name":"제어문, 조건문, 반복문","slug":"제어문-조건문-반복문","link":"/tags/%EC%A0%9C%EC%96%B4%EB%AC%B8-%EC%A1%B0%EA%B1%B4%EB%AC%B8-%EB%B0%98%EB%B3%B5%EB%AC%B8/"},{"name":"웹 크롤링, 웹 스크래핑","slug":"웹-크롤링-웹-스크래핑","link":"/tags/%EC%9B%B9-%ED%81%AC%EB%A1%A4%EB%A7%81-%EC%9B%B9-%EC%8A%A4%ED%81%AC%EB%9E%98%ED%95%91/"},{"name":"class quiz","slug":"class-quiz","link":"/tags/class-quiz/"},{"name":"pandas","slug":"pandas","link":"/tags/pandas/"},{"name":"selenium","slug":"selenium","link":"/tags/selenium/"},{"name":"파이썬 기본 문법 1","slug":"파이썬-기본-문법-1","link":"/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95-1/"},{"name":"기본 사칙연산, 슬라이싱","slug":"기본-사칙연산-슬라이싱","link":"/tags/%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%B9%99%EC%97%B0%EC%82%B0-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8B%B1/"},{"name":"myblog","slug":"myblog","link":"/tags/myblog/"},{"name":"encoding py to md","slug":"encoding-py-to-md","link":"/tags/encoding-py-to-md/"},{"name":"NumPy","slug":"NumPy","link":"/tags/NumPy/"},{"name":"google movie","slug":"google-movie","link":"/tags/google-movie/"},{"name":"except","slug":"except","link":"/tags/except/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"lotto","slug":"lotto","link":"/tags/lotto/"},{"name":"Module","slug":"Module","link":"/tags/Module/"},{"name":"web crawling","slug":"web-crawling","link":"/tags/web-crawling/"}],"categories":[]}